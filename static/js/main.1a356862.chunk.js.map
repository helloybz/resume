{"version":3,"sources":["components/Header/Contact.js","components/Header/HeaderDivider.js","components/Header/Header.js","components/EducationItem/EducationItem.js","components/CareerItem/CareerItem.js","components/ProjectItem/ProjectItem.js","components/ExperienceItem/ExperienceItem.js","info.js","components/BodySectionWrapper.js","Resume.js","ResumeWrapper.js","App.js","reportWebVitals.js","index.js"],"names":["Contact","printable","icon","value","Grid","item","container","xs","md","Typography","HeaderDivider","sx","Divider","variant","Header","name","position","email","github","alignItems","padding","className","direction","justifyContent","EducationItem","major","degree","from","to","component","ListItem","rowSpacing","CareerItem","department","forInMonth","display","ProjectItem","at","descriptionByLine","description","split","map","line","i","paragraph","ExperienceItem","category","items","List","what","info","BodySectionWrapper","content","itemComponent","console","log","ItemComponent","title","Resume","maxWidth","Paper","minHeight","marginBottom","career","education","experience","project","slice","ResumeWrapper","handlePrint","useReactToPrint","resumeRef","current","PrintableResume","forwardRef","props","ref","useRef","Fab","right","bottom","zIndex","displayPrint","onClick","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kSAEO,SAASA,EAAT,GAAsD,IAAD,IAAlCC,iBAAkC,SAAfC,EAAe,EAAfA,KAAMC,EAAS,EAATA,MAC/C,OACI,eAACC,EAAA,EAAD,CACIC,MAAI,EACJC,WAAS,EAFb,UAII,cAACF,EAAA,EAAD,CAAMC,MAAI,EAACE,GAAIN,EAAY,EAAI,EAAGO,GAAI,EAAtC,SACKN,IAEL,cAACE,EAAA,EAAD,CAAMC,MAAI,EAACE,GAAIN,EAAY,GAAK,EAAGO,GAAI,GAAvC,SACI,cAACC,EAAA,EAAD,UAAaN,S,YCVtB,SAASO,IACZ,OACI,cAACN,EAAA,EAAD,CAAMC,MAAI,EAACE,GAAI,GAAII,GAAI,CACnB,GAAM,UADV,SAGI,cAACC,EAAA,EAAD,CAASC,QAAQ,YAAYF,GAAI,CAC7B,kBAAqB,SACrB,YAAe,YCFxB,SAASG,EAAT,GAAuE,IAAD,IAApDb,iBAAoD,SAAjCc,EAAiC,EAAjCA,KAAMC,EAA2B,EAA3BA,SAAUC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,OAC/D,OACI,eAACd,EAAA,EAAD,CAAME,WAAS,EAACa,WAAW,WAAWR,GAAI,CAAES,QAAS,CAAE,GAAMnB,EAAY,SAAW,IAAK,GAAM,WAA/F,UACI,cAACG,EAAA,EAAD,CAAMC,MAAI,EAACE,GAAI,GAAII,GAAI,CACnB,SAAY,OACZ,WAAc,QAFlB,SAIKI,IAEL,cAACX,EAAA,EAAD,CAAMC,MAAI,EAACE,GAAIN,EAAY,EAAI,GAAIO,GAAI,EAAGG,GAAI,CAC1C,SAAY,SACZ,WAAc,QACd,SAAY,GAHhB,SAKKK,IAEL,eAACZ,EAAA,EAAD,CAAMC,MAAI,EAACE,GAAIN,EAAY,OAAS,GAAIO,GAAI,OACxCF,WAAS,EACTe,UAAU,WACVC,UAAU,SACVC,eAAe,WACfJ,WAAW,WALf,UAOI,cAACnB,EAAD,CAASC,UAAWA,EAAWC,KAAM,cAAC,IAAD,IAAcC,MAAOc,IAC1D,cAACjB,EAAD,CAASC,UAAWA,EAAWC,KAAM,cAAC,IAAD,IAAgBC,MAAOe,OAGhE,cAACR,EAAD,O,YC/BL,SAASc,EAAT,GAA8E,IAAD,IAApDvB,iBAAoD,SAAjCc,EAAiC,EAAjCA,KAAMU,EAA2B,EAA3BA,MAAOC,EAAoB,EAApBA,OAAQC,EAAY,EAAZA,KAAMC,EAAM,EAANA,GAC1E,OACI,eAACxB,EAAA,EAAD,CACIC,MAAI,EAACE,GAAI,GAAIsB,UAAWC,IACxBxB,WAAS,EACTa,WAAW,WACXY,WAAY,EACZpB,GAAI,CAAE,GAAM,UALhB,UAQI,cAACP,EAAA,EAAD,CAAMC,MAAI,EAACE,GAAI,GAAIsB,UAAWpB,IAC1BE,GAAI,CACA,SAAY,UACZ,WAAc,MACd,eAAkB,aAJ1B,SAMKc,EAAQ,IAAMC,IAGnB,cAACtB,EAAA,EAAD,CAAMC,MAAI,EAACE,GAAIN,EAAY,EAAI,GAAIO,GAAI,EACnCqB,UAAWpB,IADf,SAGKM,IAGL,cAACX,EAAA,EAAD,CAAMC,MAAI,EAACE,GAAIN,EAAY,EAAI,GAAIO,GAAI,EACnCqB,UAAWpB,IADf,SAEKkB,EAAO,MAAQC,OC3BzB,SAASI,EAAT,GAA8F,IAAD,IAAvE/B,iBAAuE,SAApDc,EAAoD,EAApDA,KAAMkB,EAA8C,EAA9CA,WAAYN,EAAkC,EAAlCA,KAAMC,EAA4B,EAA5BA,GAAIZ,EAAwB,EAAxBA,SAAUkB,EAAc,EAAdA,WAClF,OACI,eAAC9B,EAAA,EAAD,CACIC,MAAI,EAACE,GAAI,GAAIsB,UAAWC,IACxBxB,WAAS,EACTa,WAAW,WACXY,WAAY,EACZpB,GAAI,CAAE,GAAM,UALhB,UAOI,eAACP,EAAA,EAAD,CAAME,WAAS,EAACD,MAAI,EAACE,GAAI,GAAIY,WAAW,WAAxC,UACI,cAACf,EAAA,EAAD,CAAMC,MAAI,EAACE,GAAG,OAAOsB,UAAWpB,IAC5BE,GAAI,CACA,SAAY,UACZ,WAAc,MACd,eAAkB,YAClB,GAAM,GALd,SAOKI,IAGL,cAACX,EAAA,EAAD,CAAMC,MAAI,EAACE,GAAI,EAAGI,GAAI,CAClB,SAAY,UADhB,SAGKsB,OAIT,cAAC7B,EAAA,EAAD,CAAMC,MAAI,EAACE,GAAIN,EAAY,EAAI,GAAIO,GAAI,EAAvC,SACKQ,IAGL,eAACZ,EAAA,EAAD,CAAMC,MAAI,EAACC,WAAS,EAACC,GAAgB,EAArC,UACI,cAACH,EAAA,EAAD,CAAMC,MAAI,EAACE,GAAG,OAAOI,GAAI,CAAE,GAAM,GAAjC,SAAuCgB,EAAO,MAAQC,IACtD,eAACxB,EAAA,EAAD,CAAMC,MAAI,EAACM,GAAI,CAAEwB,QAAS,CAAE,GAAMlC,EAAY,OAAS,OAAQ,GAAM,SAArE,eAAqFiC,EAAa,eAAlG,a,oBCjCT,SAASE,EAAT,GAAoE,IAAD,IAA5CnC,iBAA4C,SAAzBc,EAAyB,EAAzBA,KAAMsB,EAAmB,EAAnBA,GAC/CC,EADkE,EAAfC,YACnBC,MAAM,MAC1C,OACI,eAACpC,EAAA,EAAD,CAAMC,MAAI,EAACE,GAAI,GAAID,WAAS,EAACK,GAAI,CAAES,QAAS,CAAE,GAAMnB,EAAY,IAAM,SAAtE,UAEI,eAACG,EAAA,EAAD,CAAMC,MAAI,EAACE,GAAI,GAAIsB,UAAWpB,IAAYE,GAAI,CAAE,SAAY,eAA5D,UACKI,EAAO,IADZ,MACoBsB,EADpB,OAIA,cAACjC,EAAA,EAAD,CAAMC,MAAI,EAACE,GAAI,GAAID,WAAS,EAA5B,SACKgC,EAAkBG,KAAI,SAACC,EAAMC,GAAP,OACnB,cAACvC,EAAA,EAAD,CAAMC,MAAI,EAACE,GAAI,GAAYI,GAAI,CAAE,GAAM,EAAG,GAAM,GAAhD,SACI,cAACF,EAAA,EAAD,CAAYmC,WAAS,EAACjC,GAAI,CAAE,GAAM,UAAlC,SACK+B,KAFeC,WCXrC,SAASE,EAAT,GAAiE,IAAD,IAAtC5C,iBAAsC,SAAnB6C,EAAmB,EAAnBA,SAAUC,EAAS,EAATA,MAC1D,OACI,eAAC3C,EAAA,EAAD,CAAMC,MAAI,EAACE,GAAI,GAAIsB,UAAWC,IAAUxB,WAAS,EAAjD,UACI,cAACF,EAAA,EAAD,CAAMC,MAAI,EAACE,GAAI,EAAGI,GAAI,CAAE,WAAc,OAAtC,SACKmC,IAEL,cAAC1C,EAAA,EAAD,CAAMC,MAAI,EAACE,GAAI,GAAIsB,UAAWmB,IAAM1C,WAAS,EAA7C,SACKyC,EAAMN,KAAI,SAACpC,EAAMsC,GACd,OACI,eAACvC,EAAA,EAAD,CAAcC,MAAI,EAACE,GAAI,GAAID,WAAS,EAACuB,UAAWC,IAAhD,UACI,cAAC1B,EAAA,EAAD,CAAMC,MAAI,EAACE,GAAI,GACXI,GAAI,CAAE,eAAkB,aAD5B,SAEKN,EAAK4C,OAEV,cAAC7C,EAAA,EAAD,CAAMC,MAAI,EAACE,GAAIN,EAAY,EAAI,GAAIO,GAAI,EAAvC,SACK,IAAMH,EAAKgC,KAEhB,eAACjC,EAAA,EAAD,CAAMC,MAAI,EAACE,GAAIN,EAAY,EAAI,GAAIO,GAAI,EAAvC,UACKH,EAAKsB,KADV,MACmBtB,EAAKuB,QATjBe,WCZ5B,IAAIO,EAAO,CACd,KAAQ,qBACR,SAAY,eACZ,MAAS,qBACT,OAAU,sBACV,OAAU,CACN,MAAS,4BACT,MACI,CACI,CACI,KAAQ,qBACR,WAAc,8BACd,SAAY,cACZ,KAAQ,cACR,GAAM,cACN,WAAc,MAElB,CACI,KAAQ,oDACR,WAAc,iCACd,SAAY,gDACZ,KAAQ,cACR,GAAM,cACN,WAAc,OAK9B,UAAa,CACT,MAAS,eACT,MAAS,CACL,CACI,KAAQ,oDACR,MAAS,iCACT,OAAU,eACV,KAAQ,WACR,GAAM,YAEV,CACI,KAAQ,sEACR,MAAS,2BACT,OAAU,eACV,KAAQ,WACR,GAAM,cAIlB,QAAW,CACP,MAAS,2BACT,MAAS,CACL,CACI,KAAQ,yBACR,GAAM,qBACN,YAAc,6lDAUlB,CACI,KAAQ,iDACR,GAAM,oDACN,YAAc,4mDAMlB,CACI,KAAQ,yCACR,GAAM,oDACN,YAAc,s/BAMlB,CACI,KAAQ,iHACR,GAAM,iCACN,YAAc,m6CAUlB,CACI,KAAQ,kEACR,GAAM,cACN,YAAc,itBAQ1B,WAAc,CACV,MAAS,4BACT,MAAS,CACL,CACI,SAAY,sBACZ,MAAS,CACL,CACI,KAAQ,6EACR,GAAM,iCACN,KAAQ,UACR,GAAM,WAEV,CACI,KAAQ,8DACR,GAAM,iCACN,KAAQ,UACR,GAAM,YAEV,CACI,KAAQ,oFACR,GAAM,iCACN,KAAQ,WACR,GAAM,cAKlB,CACI,SAAY,eACZ,MAAS,CACL,CACI,KAAQ,4BACR,GAAM,iBACN,KAAQ,UACR,GAAM,WAEV,CACI,KAAQ,yCACR,GAAM,8BACN,KAAQ,WACR,GAAM,iBC9IvB,SAASC,EAAT,GAA4E,IAAD,IAA7ClD,iBAA6C,SAA1BmD,EAA0B,EAA1BA,QAASC,EAAiB,EAAjBA,cAC7DC,QAAQC,IAAIH,GACZ,IAAII,EAAgBH,EAEpB,OACI,eAACjD,EAAA,EAAD,CAAME,WAAS,EAACK,GAAI,CAAE,GAAM,UAA5B,UACI,cAACP,EAAA,EAAD,CACIC,MAAI,EAACE,GAAI,GACTI,GAAI,CACA,SAAY,cACZ,WAAc,QAJtB,SAOKyC,EAAQK,QAEb,cAACrD,EAAA,EAAD,CAAMC,MAAI,EAACE,GAAI,GAAID,WAAS,EAACuB,UAAWmB,IAAxC,SACKI,EAAQL,MAAMN,KAAI,SAACpC,EAAMsC,GACtB,OACI,cAACa,EAAD,aAAevD,UAAWA,GAClBI,GADkCsC,WCd3D,SAASe,EAAT,GAAwC,IAAD,IAArBzD,iBAAqB,SAC1C,OACI,eAACG,EAAA,EAAD,CAAME,WAAS,EAACiB,eAAe,SAASZ,GAAI,CAAEgD,SAAU,SAAxD,UACI,eAACvD,EAAA,EAAD,CAAMiB,UAAU,SAAShB,MAAI,EAACC,WAAS,EAACuB,UAAW5B,EAAY,KAAO2D,IAClEjD,GAAI,CACAgD,SAAU,QACVE,UAAW,QACXzC,QAAS,CAAE,GAAM,OAAQ,GAAM,QAC/B0C,aAAc7D,EAAY,EAAI,QALtC,UAQI,cAACG,EAAA,EAAD,CAAMC,MAAI,EAACE,GAAI,GAAf,SACI,cAACO,EAAD,CACIb,UAAWA,EACXc,KAAMmC,EAAKnC,KACXC,SAAUkC,EAAKlC,SACfC,MAAOiC,EAAKjC,MACZC,OAAQgC,EAAKhC,WAGrB,eAACd,EAAA,EAAD,CACIC,MAAI,EACJE,GAAI,GACJD,WAAS,EACTK,GAAI,CACA,QAAW,CAAE,GAAMV,EAAY,YAAc,IAAK,GAAM,cALhE,UAQI,cAACkD,EAAD,CAAoBlD,UAAWA,EAAWmD,QAASF,EAAKa,OAAQV,cAAerB,IAC/E,cAACmB,EAAD,CAAoBlD,UAAWA,EAAWmD,QAASF,EAAKc,UAAWX,cAAe7B,IAClF,cAAC2B,EAAD,CAAoBlD,UAAWA,EAAWmD,QAASF,EAAKe,WAAYZ,cAAeR,UAI3F,eAACzC,EAAA,EAAD,CAAMiB,UAAU,SAAShB,MAAI,EAACC,WAAS,EAACuB,UAAW5B,EAAY,KAAO2D,IAAOjD,GAAI,CAAEgD,SAAU,QAASE,UAAW,QAASzC,QAAS,CAAE,GAAM,OAAQ,GAAM,QAAU0C,aAAc7D,EAAY,EAAI,OAAQkC,QAAS,SAAlN,UACI,cAAC/B,EAAA,EAAD,CACIC,MAAI,EAACE,GAAI,GACTI,GAAI,CACA,QAAW,CAAE,GAAM,SAAU,GAAM,aACnC,SAAY,cACZ,WAAc,QALtB,SAQKuC,EAAKgB,QAAQT,QAElB,cAACrD,EAAA,EAAD,CACIC,MAAI,EACJE,GAAI,GACJD,WAAS,EACTK,GAAI,CACA,QAAW,CAAE,GAAMV,EAAY,YAAc,IAAK,GAAM,cALhE,SAQKiD,EAAKgB,QAAQnB,MAAMoB,MAAM,EAAG,GAAG1B,KAAI,SAACpC,EAAMsC,GACvC,OACI,cAACP,EAAD,CAAqBnC,UAAWA,EAAWc,KAAMV,EAAKU,KAAMsB,GAAIhC,EAAKgC,GAAIE,YAAalC,EAAKkC,aAAzEI,WAMlC,eAACvC,EAAA,EAAD,CAAMiB,UAAU,SAAShB,MAAI,EAACC,WAAS,EAACuB,UAAW5B,EAAY,KAAO2D,IAAOjD,GAAI,CAAEgD,SAAU,QAASE,UAAW,QAASzC,QAAS,CAAE,GAAM,OAAQ,GAAM,QAAU0C,aAAc7D,EAAY,EAAI,OAAQkC,QAAS,SAAlN,UACI,cAAC/B,EAAA,EAAD,CACIC,MAAI,EAACE,GAAI,GACTI,GAAI,CACA,QAAW,CAAE,GAAM,SAAU,GAAM,aACnC,SAAY,cACZ,WAAc,QALtB,SAQKuC,EAAKgB,QAAQT,QAElB,cAACrD,EAAA,EAAD,CACIC,MAAI,EACJE,GAAI,GACJD,WAAS,EACTK,GAAI,CACA,QAAW,CAAE,GAAMV,EAAY,YAAc,IAAK,GAAM,cALhE,SAQKiD,EAAKgB,QAAQnB,MAAMoB,MAAM,EAAG,GAAG1B,KAAI,SAACpC,EAAMsC,GACvC,OACI,cAACP,EAAD,CAAqBnC,UAAWA,EAAWc,KAAMV,EAAKU,KAAMsB,GAAIhC,EAAKgC,GAAIE,YAAalC,EAAKkC,aAAzEI,c,MCjFvC,SAASyB,IACZ,IAAMC,EAAcC,0BAAgB,CAChClB,QAAS,kBAAMmB,EAAUC,WAGvBC,EAAkBC,sBAAW,SAACC,EAAOC,GAAR,OAC/B,qBAAKA,IAAKA,EAAV,SACI,cAAClB,EAAD,CAAQzD,WAAS,SAGnBsE,EAAYM,iBAAO,MACzB,OACI,eAACzE,EAAA,EAAD,CAAMiB,UAAU,UAAUf,WAAS,EAACiB,eAAe,SAASZ,GAAI,CAAES,QAAS,CAAE,GAAM,IAAK,GAAM,WAA9F,UAEI,cAAChB,EAAA,EAAD,CACIC,MAAI,EACJE,GAAI,GACJI,GAAI,CACA,WAAc,CACV,GAAM,IACN,GAAM,QAEV,SAAY,QACZ,aAAgB,OAChB,QAAW,QAVnB,SAaI,cAAC8D,EAAD,CAAiBG,IAAKL,MAI1B,cAACnE,EAAA,EAAD,CACIC,MAAI,EACJM,GAAI,CACA,aAAgB,QAHxB,SAMI,cAAC+C,EAAD,MAIJ,cAACoB,EAAA,EAAD,CACInE,GAAI,CACAK,SAAU,QACV+D,MAAO,CACH,GAAM,OACN,GAAM,SAEVC,OAAQ,CACJ,GAAM,OACN,GAAM,QAEVC,OAAQ,KACRC,aAAc,QAElBC,QAASd,EAdb,SAgBI,cAAC,IAAD,SCtDDe,MARf,WACE,OACE,8BACE,cAAChB,EAAD,OCMSiB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.1a356862.chunk.js","sourcesContent":["import { Grid, Typography } from \"@mui/material\";\n\nexport function Contact({ printable = false, icon, value }) {\n    return (\n        <Grid\n            item\n            container\n        >\n            <Grid item xs={printable ? 2 : 1} md={2} >\n                {icon}\n            </Grid>\n            <Grid item xs={printable ? 10 : 9} md={10}>\n                <Typography>{value}</Typography>\n            </Grid >\n        </Grid >\n    );\n}","import { Grid, Divider } from \"@mui/material\";\n\nexport function HeaderDivider() {\n    return (\n        <Grid item xs={12} sx={{\n            \"mt\": \"0.5rem\",\n        }}>\n            <Divider variant=\"fullWidth\" sx={{\n                \"borderBottomWidth\": \"0.1rem\",\n                \"borderColor\": \"#000\",\n            }} />\n        </Grid>\n    )\n}","import { Grid } from \"@mui/material\"\nimport GitHubIcon from '@mui/icons-material/GitHub';\nimport MailIcon from '@mui/icons-material/Mail';\n\nimport { Contact } from \"./Contact.js\";\nimport { HeaderDivider } from \"./HeaderDivider.js\";\n\nexport function Header({ printable = false, name, position, email, github }) {\n    return (\n        <Grid container alignItems=\"flex-end\" sx={{ padding: { \"xs\": printable ? \"0 1rem\" : \"0\", \"md\": \"0 1rem\" } }}>\n            <Grid item xs={12} sx={{\n                \"fontSize\": \"4rem\",\n                \"fontWeight\": \"bold\"\n            }}>\n                {name}\n            </Grid>\n            <Grid item xs={printable ? 8 : 12} md={8} sx={{\n                \"fontSize\": \"2.5rem\",\n                \"fontWeight\": \"light\",\n                \"flexGrow\": 1,\n            }}>\n                {position}\n            </Grid>\n            <Grid item xs={printable ? 'auto' : 12} md={'auto'}\n                container\n                className=\"contacts\"\n                direction=\"column\"\n                justifyContent=\"flex-end\"\n                alignItems=\"baseline\"\n            >\n                <Contact printable={printable} icon={<MailIcon />} value={email} />\n                <Contact printable={printable} icon={<GitHubIcon />} value={github} />\n            </Grid >\n\n            <HeaderDivider />\n\n        </Grid >\n    )\n};\n\n","import { ListItem, Grid, Typography } from \"@mui/material\";\n\n\nexport function EducationItem({ printable = false, name, major, degree, from, to }) {\n    return (\n        <Grid\n            item xs={12} component={ListItem}\n            container\n            alignItems=\"baseline\"\n            rowSpacing={1}\n            sx={{ \"mb\": \"0.5rem\" }}\n        >\n\n            <Grid item xs={12} component={Typography}\n                sx={{\n                    \"fontSize\": \"1.15rem\",\n                    \"fontWeight\": \"600\",\n                    \"textDecoration\": \"underline\",\n                }}>\n                {major + \" \" + degree}\n            </Grid>\n\n            <Grid item xs={printable ? 6 : 12} md={6}\n                component={Typography}\n            >\n                {name}\n            </Grid>\n\n            <Grid item xs={printable ? 6 : 12} md={6}\n                component={Typography}>\n                {from + \" ~ \" + to}\n            </Grid>\n        </Grid >\n    )\n}","import { ListItem, Grid, Typography } from \"@mui/material\";\n\n\nexport function CareerItem({ printable = false, name, department, from, to, position, forInMonth }) {\n    return (\n        <Grid\n            item xs={12} component={ListItem}\n            container\n            alignItems=\"baseline\"\n            rowSpacing={1}\n            sx={{ \"mb\": \"0.5rem\" }}\n        >\n            <Grid container item xs={12} alignItems=\"baseline\">\n                <Grid item xs=\"auto\" component={Typography}\n                    sx={{\n                        \"fontSize\": \"1.15rem\",\n                        \"fontWeight\": \"600\",\n                        \"textDecoration\": \"underline\",\n                        \"mr\": 2,\n                    }}>\n                    {name}\n                </Grid>\n\n                <Grid item xs={6} sx={{\n                    \"fontSize\": \"1.1rem\",\n                }}>\n                    {department}\n                </Grid>\n            </Grid>\n\n            <Grid item xs={printable ? 6 : 12} md={6}>\n                {position}\n            </Grid>\n\n            <Grid item container xs={printable ? 6 : 6} >\n                <Grid item xs=\"auto\" sx={{ \"mr\": 1 }}>{from + \" ~ \" + to}</Grid>\n                <Grid item sx={{ display: { \"xs\": printable ? \"flex\" : \"none\", \"md\": \"flex\" } }} > ({forInMonth + \"개월\"})</Grid>\n            </Grid>\n        </Grid >\n    )\n}","import { Grid, Typography } from \"@mui/material\";\n\n\nexport function ProjectItem({ printable = false, name, at, description }) {\n    var descriptionByLine = description.split('\\n')\n    return (\n        <Grid item xs={12} container sx={{ padding: { \"xs\": printable ? \"0\" : \"1rem\" } }}>\n\n            <Grid item xs={12} component={Typography} sx={{ \"fontSize\": \"h6.fontSize\" }}>\n                {name + \" \"}  ({at})\n            </Grid>\n\n            <Grid item xs={12} container>\n                {descriptionByLine.map((line, i) => (\n                    <Grid item xs={12} key={i} sx={{ \"pt\": 0, \"pb\": 0 }} >\n                        <Typography paragraph sx={{ \"mb\": \"0.9rem\" }}>\n                            {line}\n                        </Typography>\n                    </Grid>\n                ))}\n            </Grid>\n        </Grid >\n    )\n}","import { Grid, List, ListItem } from \"@mui/material\";\n\n\nexport function ExperienceItem({ printable = false, category, items }) {\n    return (\n        <Grid item xs={12} component={ListItem} container>\n            <Grid item xs={9} sx={{ \"fontWeight\": \"450\" }}>\n                {category}\n            </Grid>\n            <Grid item xs={12} component={List} container>\n                {items.map((item, i) => {\n                    return (\n                        <Grid key={i} item xs={12} container component={ListItem}>\n                            <Grid item xs={12}\n                                sx={{ \"textDecoration\": \"underline\" }}>\n                                {item.what}\n                            </Grid>\n                            <Grid item xs={printable ? 6 : 12} md={6}>\n                                {\"@\" + item.at}\n                            </Grid>\n                            <Grid item xs={printable ? 6 : 12} md={6}>\n                                {item.from} ~ {item.to}\n                            </Grid>\n                        </Grid>\n                    )\n                })}\n            </Grid>\n        </Grid >\n    )\n}","export var info = {\n    \"name\": \"최영범\",\n    \"position\": \"ML Developer\",\n    \"email\": \"helloybz@gmail.com\",\n    \"github\": \"github.com/helloybz\",\n    \"career\": {\n        \"title\": \"직무 경력\",\n        \"items\":\n            [\n                {\n                    \"name\": \"수퍼브\",\n                    \"department\": \"데이터/AI팀\",\n                    \"position\": \"ML Engineer\",\n                    \"from\": \"2020.07.06.\",\n                    \"to\": \"2021.08.31.\",\n                    \"forInMonth\": \"13\",\n                },\n                {\n                    \"name\": \"아주대학교 의료원\",\n                    \"department\": \"생리학교실\",\n                    \"position\": \"ML Researcher, 서버관리자\",\n                    \"from\": \"2019.11.01.\",\n                    \"to\": \"2020.06.30.\",\n                    \"forInMonth\": \"8\",\n\n                }\n            ]\n    },\n    \"education\": {\n        \"title\": \"학위\",\n        \"items\": [\n            {\n                \"name\": \"아주대학교 대학원\",\n                \"major\": \"컴퓨터공학\",\n                \"degree\": \"석사\",\n                \"from\": \"2017.03.\",\n                \"to\": \"2019.08.\"\n            },\n            {\n                \"name\": \"아주대학교 정보통신대학\",\n                \"major\": \"미디어학\",\n                \"degree\": \"학사\",\n                \"from\": \"2011.03.\",\n                \"to\": \"2017.08.\"\n            }\n        ]\n    },\n    \"project\": {\n        \"title\": \"프로젝트\",\n        \"items\": [\n            {\n                \"name\": \"Note Pattern Generator\",\n                \"at\": \"수퍼브\",\n                \"description\": `\n                Superb에서 진행한 프로젝트로, 주어진 음악에 맞는 리듬게임용 노트 패턴을 생성하는 프로젝트입니다.\\\n\n                Superb는 HYBE 아티스트 IP 기반의 리듬게임 RhythmHive를 서비스하고 있습니다. \\\n                BTS, TXT, ENHYPEN의 음악에 맞는 리듬게임용 노트패턴을 수작업으로 제작해왔습니다. \\\n                사업이 확장됨에 따라 신규 음악이 많아질 것으로 예상었고, 수작업만으로 컨텐츠를 제작하기에는 그 작업량을 감당하기 어렵다고 판단했습니다.\\\n\n                78개의 음원에 대해 수작업으로 만든 노트패턴을 학습하여, 차후 새로 추가되는 음악에 대해서 알맞은 노트패턴을 생성하는 모델을 만드는 프로젝트입니다.\\\n                프로젝트는 회사의 사정으로 끝내 완성되지는 못했습니다.`\n            },\n            {\n                \"name\": \"Batch Integration with Adversarial AutoEncoder\",\n                \"at\": \"아주대학교 의료원\",\n                \"description\": `\n                Bioinformatics 분야에서 고질적인 문제인 Batch Effect를 Adversarial AutoEncoder를 활용해 해결하는 방법에 관한 연구 입니다.\n                Bioinformatics 분야에서는 유전체 데이터를 비교 분석하여 유의미한 생물학적 차이를 발견합니다. 환자에게서 떼어낸 조직을 유전체 데이터로 변환하는 과정에서 실험자, 온도, 습도 등의 외부 요인으로 인한 Noise가 필연적으로 생깁니다. 비교하고자 하는 두 유전체 데이터에 서로 다른 성격의 Noise가 생겨 원활한 비교 분석이 어렵습니다. 이러한 문제를 Batch Effect라고 하며, Batch Effect를 완화하는 작업을 Batch Integration이라고 합니다. \n                이 연구는 다양한 유전체 데이터 중에서도 Single-cell RNA sequencing 데이터에 대해 효과적인 Batch Integration을 적용하는 방법에 관한 연구입니다.\n                 `,\n            },\n            {\n                \"name\": \"Content- and Link-Aware Node Embedding\",\n                \"at\": \"아주대학교 대학원\",\n                \"description\": `\n                석사 학위 논문으로, 네트워크 내 노드들의 연결관계 뿐만 아니라 노드의 내적 정보까지도 함께 반영한 임베딩을 구하기 위한 방법을 제안합니다.\\\n                노드의 내적 정보에, 이웃 노드의 정보를 유사도에 비례하여 취합하여 노드의 정보를 전파합니다.\\\n                반복적인 전파과정 끝에 노드 임베딩이 반드시 수렴하는 조건을 제안하여, 학습 파라미터없이 노드의 임베딩을 구할 수 있습니다.\\\n                `,\n            },\n            {\n                \"name\": \"Visual Analysis System for Clustering Dementia Patients Based on Similarity of Dementia Phase Changing Pattern\",\n                \"at\": \"아주대학교\",\n                \"description\": `\n                치매 환자의 진단 데이터와 치매의 진행 양상을 효과적으로 시각화하여, 치매 진료 시 의사결정에 도움을 주는 시각화 방법에 관한 연구입니다.\\\n                학부 재학 중, 학부생 연구 프로그램에 참여해 데이터시각화 연구실에서 진행한 프로젝트입니다.\\\n                이 연구는 IEEE VIS 2016에서 열린 BioVis workshop 포스터 부분에 채택되었습니다.\\\n\n                환자들의 치매 진행 양상에 따라 Hierarchical Clustering을 적용하여 환자군을 분류하고,\\\n                각 환자의 치매 진단용 설문 응답결과를 다른 축에 표기하여, \\\n                치매 진행 양상에 따른 환자군별 설문 응답의 패턴을 한눈에 판단하도록 했습니다.\n                `,\n            },\n            {\n                \"name\": \"Snapme Korea 웹서비스 제작 외주\",\n                \"at\": \"SnapmeKorea\",\n                \"description\": `\n                사진작가와 관광객을 매칭시켜주는 O2O 서비스인 스냅미코리아의 홈페이지를 제작을 의뢰받았습니다.\\\n                학부 재학중 웹개발을 익히면서 친구와 같이 맡은 프로젝트이며 저는 백엔드 개발을 맡았습니다.\\\n                nginx + gunicorn + Django + PostgreSQL을 사용했으며, cafe24에서 호스팅하였습니다.\\\n                `,\n            }\n        ]\n    },\n    \"experience\": {\n        \"title\": \"기타 활동\",\n        \"items\": [\n            {\n                \"category\": \"Teaching Assistance\",\n                \"items\": [\n                    {\n                        \"what\": \"객체지향프로그래밍 Python 실습\",\n                        \"at\": \"아주대학교\",\n                        \"from\": \"2017.9.\",\n                        \"to\": \"2019.6.\"\n                    },\n                    {\n                        \"what\": \"기계학습 Python 실습 (영어)\",\n                        \"at\": \"아주대학교\",\n                        \"from\": \"2018.9.\",\n                        \"to\": \"2018.10.\"\n                    },\n                    {\n                        \"what\": \"의생명정보학 기계학습 Python 실습\",\n                        \"at\": \"서울대학교\",\n                        \"from\": \"2018.12.\",\n                        \"to\": \"2018.12.\"\n                    },\n\n                ]\n            },\n            {\n                \"category\": \"학회\",\n                \"items\": [\n                    {\n                        \"what\": \"학회 참가\",\n                        \"at\": \"IEEE AAAI 2019\",\n                        \"from\": \"2019.1.\",\n                        \"to\": \"2019.2.\"\n                    },\n                    {\n                        \"what\": \"워크샵 Poster 발표\",\n                        \"at\": \"BioVis 2016 @ IEEE VIS 2016\",\n                        \"from\": \"2016.10.\",\n                        \"to\": \"2016.10.\"\n                    },\n                ]\n            }\n        ]\n    }\n}","import { Grid, List } from \"@mui/material\";\n\n\nexport function BodySectionWrapper({ printable = false, content, itemComponent }) {\n    console.log(content)\n    var ItemComponent = itemComponent\n\n    return (\n        <Grid container sx={{ \"mt\": \"1.2rem\" }}>\n            <Grid\n                item xs={12}\n                sx={{\n                    \"fontSize\": \"h5.fontSize\",\n                    \"fontWeight\": \"bold\",\n                }}\n            >\n                {content.title}\n            </Grid>\n            <Grid item xs={12} container component={List}>\n                {content.items.map((item, i) => {\n                    return (\n                        <ItemComponent printable={printable} key={i}\n                            {...item}\n                        />\n                    )\n                })}\n            </Grid>\n        </Grid>\n    )\n}","import { Grid, Paper } from \"@mui/material\";\n\nimport { CareerItem, EducationItem, ExperienceItem, Header, ProjectItem } from './components'\n\nimport { info } from './info.js'\nimport { BodySectionWrapper } from \"./components/BodySectionWrapper\";\n\nexport function Resume({ printable = false }) {\n    return (\n        <Grid container justifyContent=\"center\" sx={{ maxWidth: '210mm' }}>\n            <Grid className=\"page_1\" item container component={printable ? null : Paper}\n                sx={{\n                    maxWidth: '210mm',\n                    minHeight: \"297mm\",\n                    padding: { \"xs\": \"1rem\", \"md\": \"3rem\" },\n                    marginBottom: printable ? 0 : '1rem'\n                }}\n            >\n                <Grid item xs={12}>\n                    <Header\n                        printable={printable}\n                        name={info.name}\n                        position={info.position}\n                        email={info.email}\n                        github={info.github}\n                    />\n                </Grid>\n                <Grid\n                    item\n                    xs={12}\n                    container\n                    sx={{\n                        \"padding\": { \"xs\": printable ? \"1rem 2rem\" : \"0\", \"md\": \"1rem 2rem\" }\n                    }}\n                >\n                    <BodySectionWrapper printable={printable} content={info.career} itemComponent={CareerItem} />\n                    <BodySectionWrapper printable={printable} content={info.education} itemComponent={EducationItem} />\n                    <BodySectionWrapper printable={printable} content={info.experience} itemComponent={ExperienceItem} />\n                </Grid>\n            </Grid>\n\n            <Grid className=\"page_2\" item container component={printable ? null : Paper} sx={{ maxWidth: '210mm', minHeight: \"297mm\", padding: { \"xs\": \"1rem\", \"md\": \"3rem\" }, marginBottom: printable ? 0 : '1rem', display: \"block\" }}>\n                <Grid\n                    item xs={12}\n                    sx={{\n                        \"padding\": { \"xs\": '0.5rem', \"md\": \"1rem 2rem\" },\n                        \"fontSize\": \"h5.fontSize\",\n                        \"fontWeight\": \"bold\",\n                    }}\n                >\n                    {info.project.title}\n                </Grid>\n                <Grid\n                    item\n                    xs={12}\n                    container\n                    sx={{\n                        \"padding\": { \"xs\": printable ? \"1rem 2rem\" : \"0\", \"md\": \"1rem 2rem\" }\n                    }}>\n\n                    {info.project.items.slice(0, 3).map((item, i) => {\n                        return (\n                            <ProjectItem key={i} printable={printable} name={item.name} at={item.at} description={item.description} />\n                        )\n                    })}\n                </Grid>\n            </Grid>\n\n            <Grid className=\"page_3\" item container component={printable ? null : Paper} sx={{ maxWidth: '210mm', minHeight: \"297mm\", padding: { \"xs\": \"1rem\", \"md\": \"3rem\" }, marginBottom: printable ? 0 : '1rem', display: \"block\" }}>\n                <Grid\n                    item xs={12}\n                    sx={{\n                        \"padding\": { \"xs\": '0.5rem', \"md\": \"1rem 2rem\" },\n                        \"fontSize\": \"h5.fontSize\",\n                        \"fontWeight\": \"bold\",\n                    }}\n                >\n                    {info.project.title}\n                </Grid>\n                <Grid\n                    item\n                    xs={12}\n                    container\n                    sx={{\n                        \"padding\": { \"xs\": printable ? \"1rem 2rem\" : \"0\", \"md\": \"1rem 2rem\" }\n                    }}>\n\n                    {info.project.items.slice(3, 6).map((item, i) => {\n                        return (\n                            <ProjectItem key={i} printable={printable} name={item.name} at={item.at} description={item.description} />\n                        )\n                    })}\n                </Grid>\n            </Grid>\n        </Grid >\n\n    )\n}\n","import { Fab, Grid } from \"@mui/material\";\nimport { forwardRef, useRef } from \"react\";\nimport PrintIcon from '@mui/icons-material/Print';\nimport { useReactToPrint } from \"react-to-print\";\n\nimport { Resume } from \"./Resume\"\nimport \"./Resume.css\";\n\nexport function ResumeWrapper() {\n    const handlePrint = useReactToPrint({\n        content: () => resumeRef.current,\n    });\n\n    const PrintableResume = forwardRef((props, ref) => (\n        <div ref={ref} >\n            <Resume printable />\n        </div>\n    ))\n    const resumeRef = useRef(null)\n    return (\n        <Grid className=\"wrapper\" container justifyContent=\"center\" sx={{ padding: { \"xs\": \"0\", \"md\": \"3rem 0\" } }}>\n            {/* Resume for print */}\n            <Grid\n                item\n                xs={12}\n                sx={{\n                    \"paddingTop\": {\n                        \"xs\": \"0\",\n                        \"md\": \"3rem\",\n                    },\n                    \"maxWidth\": \"210mm\",\n                    \"displayPrint\": \"flex\",\n                    \"display\": \"none\",\n                }}\n            >\n                <PrintableResume ref={resumeRef} />\n            </Grid>\n\n            {/* Resume for show */}\n            <Grid\n                item\n                sx={{\n                    \"displayPrint\": \"none\",\n                }}\n            >\n                <Resume />\n            </Grid>\n\n            {/* Print Button */}\n            <Fab\n                sx={{\n                    position: \"fixed\",\n                    right: {\n                        \"xs\": \"1rem\",\n                        \"lg\": \"10rem\"\n                    },\n                    bottom: {\n                        \"xs\": \"1rem\",\n                        \"lg\": \"5rem\"\n                    },\n                    zIndex: \"20\",\n                    displayPrint: \"none\"\n                }}\n                onClick={handlePrint}\n            >\n                <PrintIcon />\n            </Fab>\n\n        </Grid >\n    )\n}\n","import { ResumeWrapper } from \"./ResumeWrapper\"\n\n\nfunction App() {\n  return (\n    <div>\n      <ResumeWrapper />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}